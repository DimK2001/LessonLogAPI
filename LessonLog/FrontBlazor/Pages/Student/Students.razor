@page "/Students"

@using LessonLog.Domain
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks

@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime js

<h3>students</h3>

@if (students == null)
{
    <p><em>Empty</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>AttestationMark</th>
                <th>ExamMark</th>
                <th>GroupFlag</th>
                <th>GroupId</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in students)
            {
                <tr>
                    <td>@student.Id</td>
                    <td>@student.Name</td>
                    <td>@student.AttestationMark</td>
                    <td>@student.ExamMark</td>
                    <td>@student.GroupFlag</td>
                    <td>@student.GroupId</td>
                    <td><a href="/EditStudents/@student.Id" class="btn btn-info">Edit</a></td>
                    <td><a @onclick="(() => Delete(student.Id))" class="btn btn-danger">Delete</a></td>
                </tr>
            }
        </tbody>
    </table>
}

<td><a href="/CreateStudent" class="btn btn-info">+ Create new</a></td>

@if (responseMessage != null)
{
    <p>@responseMessage</p>
}

@code {
    private IEnumerable<Student> students;
    private string responseMessage { get; set; }
    protected override async Task OnInitializedAsync()
    {
        students = await httpClient.GetFromJsonAsync<List<Student>>
        ("https://localhost:5001/api/Students");
    }
    protected override async Task OnParametersSetAsync()
    {
        students = await httpClient.GetFromJsonAsync<List<Student>>
        ("https://localhost:5001/api/Students");
    }
    public async Task Delete(Guid Id)
    {
        bool confirm = await js.InvokeAsync<bool>("Confirm", "Do you want to delete this?");
        if (confirm)
        {
            var response = await httpClient.DeleteAsync($"https://localhost:5001/api/Student/{Id}");

            if (response.IsSuccessStatusCode)
            {
                responseMessage = await response.Content.ReadAsStringAsync();
            }
        }
    }
}
